<?xml version="1.0" ?>
<!-- =================================================================================== -->
<!-- |    This document was autogenerated by xacro from urdf/leo.xacro                 | -->
<!-- |    EDITING THIS FILE BY HAND IS NOT RECOMMENDED                                 | -->
<!-- =================================================================================== -->
<robot name="leo">
  <gazebo reference="base">
    <material>Gazebo/Blue</material>
  </gazebo>
  <gazebo reference="imu_link">
    <gravity>true</gravity>
    <sensor name="imu_sensor" type="imu">
      <always_on>true</always_on>
      <update_rate>30</update_rate>
      <visualize>true</visualize>
      <topic>imu</topic>
      <plugin filename="libgazebo_ros_imu_sensor.so" name="imu_plugin">
        <robotNamespace>/leo</robotNamespace>
        <topicName>imu</topicName>
        <bodyName>imu_link</bodyName>
        <updateRateHZ>30.0</updateRateHZ>
        <gaussianNoise>0.01</gaussianNoise>
        <xyzOffset>0 0 0</xyzOffset>
        <rpyOffset>0 0 0</rpyOffset>
        <frameName>imu_link</frameName>
        <initialOrientationAsReference>false</initialOrientationAsReference>
      </plugin>
      <pose>0 0 0 0 0 0</pose>
    </sensor>
  </gazebo>
  <gazebo reference="vacuum_link">
    <material>Gazebo/Red</material>
    <sensor name="vacuum_bumper" type="contact">
      <selfCollide>false</selfCollide>
      <alwaysOn>true</alwaysOn>
      <updateRate>20.0</updateRate>
      <!-- <contact> -->
      <!-- find with gz sdf -p leo.xacro -->
      <!--   <collision>leo/base_root_fixed_joint_lump__vacuum_link_collision_collision_4</collision> -->
      <!-- </contact> -->
      <plugin filename="libgazebo_ros_bumper.so" name="gazebo_ros_bumper_controller">
        <robotNamespace>leo</robotNamespace>
        <bumperTopicName>vacuum_contacts</bumperTopicName>
        <frameName>world</frameName>
        <alwaysOn>true</alwaysOn>
        <updateRate>20.0</updateRate>
      </plugin>
    </sensor>
  </gazebo>
  <gazebo>
    <plugin filename="libgazebo_ros_control.so" name="gazebo_ros_control">
      <robotNamespace>/leo</robotNamespace>
    </plugin>
  </gazebo>
  <link name="base">
    <visual>
      <origin rpy="0.0 0.0 0.0" xyz="0.0 0.0 0.0"/>
      <geometry>
        <box size="1 0.33 0.25"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="0.0 0.0 0.0" xyz="0.0 0.0 0.0"/>
      <geometry>
        <box size="1 0.33 0.25"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="30"/>
      <inertia ixx="0.385" ixy="0" ixz="0" iyy="1.92098166" iyz="0" izz="1.844169"/>
    </inertial>
  </link>
  <link name="left_front_wheel_link">
    <visual>
      <origin rpy="1.5707963267948966 0 0" xyz=" 0 0 0"/>
      <geometry>
        <cylinder length="0.05" radius="0.15"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="1.5707963267948966 0 0" xyz=" 0 0 0"/>
      <geometry>
        <cylinder length="0.05" radius="0.15"/>
      </geometry>
    </collision>
    <inertial>
      <!-- <origin xyz="0 0 0" rpy="${pi/2} 0 0" /> -->
      <origin rpy="1.5707963267948966 0 0" xyz="0 0 0"/>
      <mass value="3"/>
      <inertia ixx="0.017499999999999998" ixy="0" ixz="0" iyy="0.017499999999999998" iyz="0" izz="0.033749999999999995"/>
    </inertial>
  </link>
  <joint name="left_front_wheel_joint" type="continuous">
    <parent link="base"/>
    <child link="left_front_wheel_link"/>
    <origin xyz="0.25 0.25 0"/>
    <axis xyz="0 1 0"/>
    <dynamics damping="0.8" friction="100.0"/>
  </joint>
  <gazebo reference="left_front_wheel_link">
    <material>Gazebo/DarkGrey</material>
    <mu1 value="0.9"/>
    <mu2 value="0.9"/>
    <selfCollide>false</selfCollide>
    <!-- <kp value="10000000.0" /> -->
    <!-- <kd value="1" /> -->
  </gazebo>
  <transmission name="left_front_wheel_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <actuator name="left_front_wheel_motor">
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
    <joint name="left_front_wheel_joint">
      <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
    </joint>
  </transmission>
  <link name="left_back_wheel_link">
    <visual>
      <origin rpy="1.5707963267948966 0 0" xyz=" 0 0 0"/>
      <geometry>
        <cylinder length="0.05" radius="0.15"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="1.5707963267948966 0 0" xyz=" 0 0 0"/>
      <geometry>
        <cylinder length="0.05" radius="0.15"/>
      </geometry>
    </collision>
    <inertial>
      <!-- <origin xyz="0 0 0" rpy="${pi/2} 0 0" /> -->
      <origin rpy="1.5707963267948966 0 0" xyz="0 0 0"/>
      <mass value="3"/>
      <inertia ixx="0.017499999999999998" ixy="0" ixz="0" iyy="0.017499999999999998" iyz="0" izz="0.033749999999999995"/>
    </inertial>
  </link>
  <joint name="left_back_wheel_joint" type="continuous">
    <parent link="base"/>
    <child link="left_back_wheel_link"/>
    <origin xyz="-0.25 0.25 0"/>
    <axis xyz="0 1 0"/>
    <dynamics damping="0.8" friction="100.0"/>
  </joint>
  <gazebo reference="left_back_wheel_link">
    <material>Gazebo/DarkGrey</material>
    <mu1 value="0.9"/>
    <mu2 value="0.9"/>
    <selfCollide>false</selfCollide>
    <!-- <kp value="10000000.0" /> -->
    <!-- <kd value="1" /> -->
  </gazebo>
  <transmission name="left_back_wheel_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <actuator name="left_back_wheel_motor">
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
    <joint name="left_back_wheel_joint">
      <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
    </joint>
  </transmission>
  <link name="right_front_wheel_link">
    <visual>
      <origin rpy="1.5707963267948966 0 0" xyz=" 0 0 0"/>
      <geometry>
        <cylinder length="0.05" radius="0.15"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="1.5707963267948966 0 0" xyz=" 0 0 0"/>
      <geometry>
        <cylinder length="0.05" radius="0.15"/>
      </geometry>
    </collision>
    <inertial>
      <!-- <origin xyz="0 0 0" rpy="${pi/2} 0 0" /> -->
      <origin rpy="1.5707963267948966 0 0" xyz="0 0 0"/>
      <mass value="3"/>
      <inertia ixx="0.017499999999999998" ixy="0" ixz="0" iyy="0.017499999999999998" iyz="0" izz="0.033749999999999995"/>
    </inertial>
  </link>
  <joint name="right_front_wheel_joint" type="continuous">
    <parent link="base"/>
    <child link="right_front_wheel_link"/>
    <origin xyz="0.25 -0.25 0"/>
    <axis xyz="0 1 0"/>
    <dynamics damping="0.8" friction="100.0"/>
  </joint>
  <gazebo reference="right_front_wheel_link">
    <material>Gazebo/DarkGrey</material>
    <mu1 value="0.9"/>
    <mu2 value="0.9"/>
    <selfCollide>false</selfCollide>
    <!-- <kp value="10000000.0" /> -->
    <!-- <kd value="1" /> -->
  </gazebo>
  <transmission name="right_front_wheel_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <actuator name="right_front_wheel_motor">
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
    <joint name="right_front_wheel_joint">
      <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
    </joint>
  </transmission>
  <link name="right_back_wheel_link">
    <visual>
      <origin rpy="1.5707963267948966 0 0" xyz=" 0 0 0"/>
      <geometry>
        <cylinder length="0.05" radius="0.15"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="1.5707963267948966 0 0" xyz=" 0 0 0"/>
      <geometry>
        <cylinder length="0.05" radius="0.15"/>
      </geometry>
    </collision>
    <inertial>
      <!-- <origin xyz="0 0 0" rpy="${pi/2} 0 0" /> -->
      <origin rpy="1.5707963267948966 0 0" xyz="0 0 0"/>
      <mass value="3"/>
      <inertia ixx="0.017499999999999998" ixy="0" ixz="0" iyy="0.017499999999999998" iyz="0" izz="0.033749999999999995"/>
    </inertial>
  </link>
  <joint name="right_back_wheel_joint" type="continuous">
    <parent link="base"/>
    <child link="right_back_wheel_link"/>
    <origin xyz="-0.25 -0.25 0"/>
    <axis xyz="0 1 0"/>
    <dynamics damping="0.8" friction="100.0"/>
  </joint>
  <gazebo reference="right_back_wheel_link">
    <material>Gazebo/DarkGrey</material>
    <mu1 value="0.9"/>
    <mu2 value="0.9"/>
    <selfCollide>false</selfCollide>
    <!-- <kp value="10000000.0" /> -->
    <!-- <kd value="1" /> -->
  </gazebo>
  <transmission name="right_back_wheel_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <actuator name="right_back_wheel_motor">
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
    <joint name="right_back_wheel_joint">
      <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
    </joint>
  </transmission>
  <link name="imu_link"/>
  <joint name="imu_joint" type="fixed">
    <parent link="base"/>
    <child link="imu_link"/>
    <origin rpy="0 0 0" xyz="0.0 0.0 0"/>
  </joint>
  <link name="vacuum_link">
    <visual>
      <geometry>
        <box size="0.01 0.33 0.1"/>
      </geometry>
    </visual>
    <collision name="vacuum_link_collision">
      <geometry>
        <box size="0.01 0.33 0.1"/>
      </geometry>
    </collision>
  </link>
  <joint name="vacuum_joint" type="fixed">
    <origin xyz="0.52 0 -0.10"/>
    <parent link="base"/>
    <child link="vacuum_link"/>
  </joint>
  <!-- Create a root link with no inertia to make the solver happy and raise the robot above the floor -->
  <link name="base_root">
    <!-- <origin xyz="${bodyx} ${bodyy} ${bodyz}" rpy="${bodyroll} ${bodypitch} ${bodyyaw}" /> -->
  </link>
  <!-- Connect that link to the base link in middle of the robot -->
  <joint name="base_root_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0 0 0.15"/>
    <parent link="base_root"/>
    <child link="base"/>
  </joint>
  <link name="front_camera_link">
    <visual>
      <geometry>
        <box size="0.02 0.08 0.04"/>
      </geometry>
    </visual>
    <collision>
      <geometry>
        <box size="0.02 0.08 0.04"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="0.1"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6"/>
    </inertial>
  </link>
  <joint name="front_camera_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.5 0 0.2"/>
    <parent link="base"/>
    <child link="front_camera_link"/>
  </joint>
  <gazebo reference="front_camera_link">
    <sensor name="front_camera" type="camera">
      <update_rate>30.0</update_rate>
      <camera name="front_camera">
        <horizontal_fov>1.3962634</horizontal_fov>
        <image>
          <width>1280</width>
          <height>720</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.02</near>
          <far>300</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <!-- Noise is sampled independently per pixel on each frame.
               That pixel's noise value is added to each of its color
               channels, which at that point lie in the range [0,1]. -->
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>
      </camera>
      <plugin filename="libgazebo_ros_camera.so" name="camera_controller">
        <alwaysOn>true</alwaysOn>
        <update_rate>0</update_rate>
        <cameraName>/leo/front_camera</cameraName>
        <imageTopicName>image_raw</imageTopicName>
        <cameraInfoTopicName>camera_info</cameraInfoTopicName>
        <frameName>front_camera_link</frameName>
        <hackBaseline>0.07</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
      </plugin>
    </sensor>
  </gazebo>
  <link name="rear_camera_link">
    <visual>
      <geometry>
        <box size="0.02 0.08 0.04"/>
      </geometry>
    </visual>
    <collision>
      <geometry>
        <box size="0.02 0.08 0.04"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="0.1"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6"/>
    </inertial>
  </link>
  <joint name="rear_camera_joint" type="fixed">
    <origin rpy="0 0 3.141592653589793" xyz="-0.5 0 0.2"/>
    <parent link="base"/>
    <child link="rear_camera_link"/>
  </joint>
  <gazebo reference="rear_camera_link">
    <sensor name="rear_camera" type="camera">
      <update_rate>30.0</update_rate>
      <camera name="rear_camera">
        <horizontal_fov>1.3962634</horizontal_fov>
        <image>
          <width>1280</width>
          <height>720</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.02</near>
          <far>300</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <!-- Noise is sampled independently per pixel on each frame.
               That pixel's noise value is added to each of its color
               channels, which at that point lie in the range [0,1]. -->
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>
      </camera>
      <plugin filename="libgazebo_ros_camera.so" name="camera_controller">
        <alwaysOn>true</alwaysOn>
        <update_rate>0</update_rate>
        <cameraName>/leo/rear_camera</cameraName>
        <imageTopicName>image_raw</imageTopicName>
        <cameraInfoTopicName>camera_info</cameraInfoTopicName>
        <frameName>rear_camera_link</frameName>
        <hackBaseline>0.07</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
      </plugin>
    </sensor>
  </gazebo>
  <link name="lidar_link">
    <visual>
      <origin rpy="0 0 0 " xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.04" radius="0.07"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="0 0 0 " xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.04" radius="0.07"/>
      </geometry>
    </collision>
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <inertia ixx="0.00025808333333333336" ixy="0" ixz="0" iyy="0.00025808333333333336" iyz="0" izz="0.0004655000000000001"/>
      <mass value="0.19"/>
    </inertial>
  </link>
  <joint name="lidar_joint" type="fixed">
    <!-- <axis xyz="0 0 1" /> -->
    <origin rpy="0 0 0" xyz="0 0 0.25"/>
    <parent link="base"/>
    <child link="lidar_link"/>
  </joint>
  <gazebo reference="lidar_link">
    <sensor name="lidar" type="ray">
      <pose>0 0 0 0 0 0</pose>
      <visualize>false</visualize>
      <update_rate>10</update_rate>
      <always_on>true</always_on>
      <ray>
        <scan>
          <horizontal>
            <samples>800</samples>
            <resolution>0.45</resolution>
            <min_angle>-3.14159</min_angle>
            <max_angle>3.14159</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.20</min>
          <max>12.0</max>
          <resolution>0.01</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <!-- Noise parameters based on published spec for Hokuyo laser
               achieving "+-30mm" accuracy at range < 10m.  A mean of 0.0m and
               stddev of 0.01m will put 99.7% of samples within 0.03m of the true
               reading. -->
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin filename="libgazebo_ros_laser.so" name="gazebo_lidar">
        <topicName>/leo/lidar/scan</topicName>
        <frameName>lidar_link</frameName>
      </plugin>
    </sensor>
  </gazebo>
  <!-- old lidar stuff -->
  <!-- <xacro:include filename="$(find gazebo_plugins)/test/multi_robot_scenario/xacro/laser/hokuyo.xacro" /> -->
  <!-- <xacro:include filename="$(find tennis-description)/urdf/laser.xacro" /> -->
  <!-- <xacro:laser name="lidar" parent="base" xyz="0.3157984464801903 -0.002068548615034871 0.25" rpy="3.14159 0.0 0.0" meshes="$(find tennis-description)/meshes/laser" /> -->
</robot>
